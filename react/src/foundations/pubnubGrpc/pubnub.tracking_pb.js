// source: pubnub.tracking.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

var google_protobuf_struct_pb = require("google-protobuf/google/protobuf/struct_pb.js");
goog.object.extend(proto, google_protobuf_struct_pb);
var pubnub_types_pb = require("./pubnub.types_pb.js");
goog.object.extend(proto, pubnub_types_pb);
goog.exportSymbol("proto.pubnub.DriverTrackingEnvelope", null, global);
goog.exportSymbol("proto.pubnub.DriverTrackingMessage", null, global);
goog.exportSymbol(
  "proto.pubnub.DriverTrackingMessage.DriverStatus",
  null,
  global
);
goog.exportSymbol("proto.pubnub.LocationTrackingEnvelope", null, global);
goog.exportSymbol("proto.pubnub.LocationTrackingMessage", null, global);
goog.exportSymbol(
  "proto.pubnub.LocationTrackingMessage.TrackingStatus",
  null,
  global
);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pubnub.DriverTrackingEnvelope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pubnub.DriverTrackingEnvelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pubnub.DriverTrackingEnvelope.displayName =
    "proto.pubnub.DriverTrackingEnvelope";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pubnub.DriverTrackingMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pubnub.DriverTrackingMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pubnub.DriverTrackingMessage.displayName =
    "proto.pubnub.DriverTrackingMessage";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pubnub.LocationTrackingEnvelope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pubnub.LocationTrackingEnvelope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pubnub.LocationTrackingEnvelope.displayName =
    "proto.pubnub.LocationTrackingEnvelope";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pubnub.LocationTrackingMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pubnub.LocationTrackingMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pubnub.LocationTrackingMessage.displayName =
    "proto.pubnub.LocationTrackingMessage";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.pubnub.DriverTrackingEnvelope.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.pubnub.DriverTrackingEnvelope.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.pubnub.DriverTrackingEnvelope} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.pubnub.DriverTrackingEnvelope.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        channel: jspb.Message.getFieldWithDefault(msg, 1, ""),
        data:
          (f = msg.getData()) &&
          proto.pubnub.DriverTrackingMessage.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pubnub.DriverTrackingEnvelope}
 */
proto.pubnub.DriverTrackingEnvelope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pubnub.DriverTrackingEnvelope();
  return proto.pubnub.DriverTrackingEnvelope.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pubnub.DriverTrackingEnvelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pubnub.DriverTrackingEnvelope}
 */
proto.pubnub.DriverTrackingEnvelope.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setChannel(value);
        break;
      case 2:
        var value = new proto.pubnub.DriverTrackingMessage();
        reader.readMessage(
          value,
          proto.pubnub.DriverTrackingMessage.deserializeBinaryFromReader
        );
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pubnub.DriverTrackingEnvelope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pubnub.DriverTrackingEnvelope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pubnub.DriverTrackingEnvelope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pubnub.DriverTrackingEnvelope.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pubnub.DriverTrackingMessage.serializeBinaryToWriter
    );
  }
};

/**
 * optional string channel = 1;
 * @return {string}
 */
proto.pubnub.DriverTrackingEnvelope.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.pubnub.DriverTrackingEnvelope} returns this
 */
proto.pubnub.DriverTrackingEnvelope.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional DriverTrackingMessage data = 2;
 * @return {?proto.pubnub.DriverTrackingMessage}
 */
proto.pubnub.DriverTrackingEnvelope.prototype.getData = function() {
  return /** @type{?proto.pubnub.DriverTrackingMessage} */ (jspb.Message.getWrapperField(
    this,
    proto.pubnub.DriverTrackingMessage,
    2
  ));
};

/**
 * @param {?proto.pubnub.DriverTrackingMessage|undefined} value
 * @return {!proto.pubnub.DriverTrackingEnvelope} returns this
 */
proto.pubnub.DriverTrackingEnvelope.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.DriverTrackingEnvelope} returns this
 */
proto.pubnub.DriverTrackingEnvelope.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.DriverTrackingEnvelope.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.pubnub.DriverTrackingMessage.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.pubnub.DriverTrackingMessage.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.pubnub.DriverTrackingMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.pubnub.DriverTrackingMessage.toObject = function(includeInstance, msg) {
    var f,
      obj = {
        driverId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        orderId: jspb.Message.getFieldWithDefault(msg, 2, ""),
        driverStatus: jspb.Message.getFieldWithDefault(msg, 3, 0),
        customStatus:
          (f = msg.getCustomStatus()) &&
          google_protobuf_struct_pb.Value.toObject(includeInstance, f),
        location:
          (f = msg.getLocation()) &&
          pubnub_types_pb.Location.toObject(includeInstance, f),
        heading: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
        velocity: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
        road: jspb.Message.getFieldWithDefault(msg, 8, ""),
        metadata:
          (f = msg.getMetadata()) &&
          google_protobuf_struct_pb.Value.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pubnub.DriverTrackingMessage}
 */
proto.pubnub.DriverTrackingMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pubnub.DriverTrackingMessage();
  return proto.pubnub.DriverTrackingMessage.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pubnub.DriverTrackingMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pubnub.DriverTrackingMessage}
 */
proto.pubnub.DriverTrackingMessage.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setDriverId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setOrderId(value);
        break;
      case 3:
        var value = /** @type {!proto.pubnub.DriverTrackingMessage.DriverStatus} */ (reader.readEnum());
        msg.setDriverStatus(value);
        break;
      case 4:
        var value = new google_protobuf_struct_pb.Value();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Value.deserializeBinaryFromReader
        );
        msg.setCustomStatus(value);
        break;
      case 5:
        var value = new pubnub_types_pb.Location();
        reader.readMessage(
          value,
          pubnub_types_pb.Location.deserializeBinaryFromReader
        );
        msg.setLocation(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setHeading(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readFloat());
        msg.setVelocity(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.setRoad(value);
        break;
      case 9:
        var value = new google_protobuf_struct_pb.Value();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Value.deserializeBinaryFromReader
        );
        msg.setMetadata(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pubnub.DriverTrackingMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pubnub.DriverTrackingMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pubnub.DriverTrackingMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pubnub.DriverTrackingMessage.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getDriverId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getOrderId();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDriverStatus();
  if (f !== 0.0) {
    writer.writeEnum(3, f);
  }
  f = message.getCustomStatus();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(5, f, pubnub_types_pb.Location.serializeBinaryToWriter);
  }
  f = message.getHeading();
  if (f !== 0.0) {
    writer.writeFloat(6, f);
  }
  f = message.getVelocity();
  if (f !== 0.0) {
    writer.writeFloat(7, f);
  }
  f = message.getRoad();
  if (f.length > 0) {
    writer.writeString(8, f);
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};

/**
 * @enum {number}
 */
proto.pubnub.DriverTrackingMessage.DriverStatus = {
  CUSTOM: 0,
  UNAVAILABLE: 1,
  WAITING_FOR_ASSIGNMENT: 2,
  EN_ROUTE_TO_PICKUP: 3,
  EN_ROUTE_TO_DELIVER: 4
};

/**
 * optional string driver_id = 1;
 * @return {string}
 */
proto.pubnub.DriverTrackingMessage.prototype.getDriverId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setDriverId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string order_id = 2;
 * @return {string}
 */
proto.pubnub.DriverTrackingMessage.prototype.getOrderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setOrderId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional DriverStatus driver_status = 3;
 * @return {!proto.pubnub.DriverTrackingMessage.DriverStatus}
 */
proto.pubnub.DriverTrackingMessage.prototype.getDriverStatus = function() {
  return /** @type {!proto.pubnub.DriverTrackingMessage.DriverStatus} */ (jspb.Message.getFieldWithDefault(
    this,
    3,
    0
  ));
};

/**
 * @param {!proto.pubnub.DriverTrackingMessage.DriverStatus} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setDriverStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};

/**
 * optional google.protobuf.Value custom_status = 4;
 * @return {?proto.google.protobuf.Value}
 */
proto.pubnub.DriverTrackingMessage.prototype.getCustomStatus = function() {
  return /** @type{?proto.google.protobuf.Value} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_struct_pb.Value,
    4
  ));
};

/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setCustomStatus = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.clearCustomStatus = function() {
  return this.setCustomStatus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.DriverTrackingMessage.prototype.hasCustomStatus = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional Location location = 5;
 * @return {?proto.pubnub.Location}
 */
proto.pubnub.DriverTrackingMessage.prototype.getLocation = function() {
  return /** @type{?proto.pubnub.Location} */ (jspb.Message.getWrapperField(
    this,
    pubnub_types_pb.Location,
    5
  ));
};

/**
 * @param {?proto.pubnub.Location|undefined} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.DriverTrackingMessage.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 5) != null;
};

/**
 * optional float heading = 6;
 * @return {number}
 */
proto.pubnub.DriverTrackingMessage.prototype.getHeading = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(
    this,
    6,
    0.0
  ));
};

/**
 * @param {number} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setHeading = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};

/**
 * optional float velocity = 7;
 * @return {number}
 */
proto.pubnub.DriverTrackingMessage.prototype.getVelocity = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(
    this,
    7,
    0.0
  ));
};

/**
 * @param {number} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setVelocity = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};

/**
 * optional string road = 8;
 * @return {string}
 */
proto.pubnub.DriverTrackingMessage.prototype.getRoad = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};

/**
 * @param {string} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setRoad = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};

/**
 * optional google.protobuf.Value metadata = 9;
 * @return {?proto.google.protobuf.Value}
 */
proto.pubnub.DriverTrackingMessage.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Value} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_struct_pb.Value,
    9
  ));
};

/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.DriverTrackingMessage} returns this
 */
proto.pubnub.DriverTrackingMessage.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.DriverTrackingMessage.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 9) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.pubnub.LocationTrackingEnvelope.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.pubnub.LocationTrackingEnvelope.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.pubnub.LocationTrackingEnvelope} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.pubnub.LocationTrackingEnvelope.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        channel: jspb.Message.getFieldWithDefault(msg, 1, ""),
        data:
          (f = msg.getData()) &&
          proto.pubnub.LocationTrackingMessage.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pubnub.LocationTrackingEnvelope}
 */
proto.pubnub.LocationTrackingEnvelope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pubnub.LocationTrackingEnvelope();
  return proto.pubnub.LocationTrackingEnvelope.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pubnub.LocationTrackingEnvelope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pubnub.LocationTrackingEnvelope}
 */
proto.pubnub.LocationTrackingEnvelope.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setChannel(value);
        break;
      case 2:
        var value = new proto.pubnub.LocationTrackingMessage();
        reader.readMessage(
          value,
          proto.pubnub.LocationTrackingMessage.deserializeBinaryFromReader
        );
        msg.setData(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pubnub.LocationTrackingEnvelope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pubnub.LocationTrackingEnvelope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pubnub.LocationTrackingEnvelope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pubnub.LocationTrackingEnvelope.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getChannel();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pubnub.LocationTrackingMessage.serializeBinaryToWriter
    );
  }
};

/**
 * optional string channel = 1;
 * @return {string}
 */
proto.pubnub.LocationTrackingEnvelope.prototype.getChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.pubnub.LocationTrackingEnvelope} returns this
 */
proto.pubnub.LocationTrackingEnvelope.prototype.setChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional LocationTrackingMessage data = 2;
 * @return {?proto.pubnub.LocationTrackingMessage}
 */
proto.pubnub.LocationTrackingEnvelope.prototype.getData = function() {
  return /** @type{?proto.pubnub.LocationTrackingMessage} */ (jspb.Message.getWrapperField(
    this,
    proto.pubnub.LocationTrackingMessage,
    2
  ));
};

/**
 * @param {?proto.pubnub.LocationTrackingMessage|undefined} value
 * @return {!proto.pubnub.LocationTrackingEnvelope} returns this
 */
proto.pubnub.LocationTrackingEnvelope.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.LocationTrackingEnvelope} returns this
 */
proto.pubnub.LocationTrackingEnvelope.prototype.clearData = function() {
  return this.setData(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.LocationTrackingEnvelope.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.pubnub.LocationTrackingMessage.prototype.toObject = function(
    opt_includeInstance
  ) {
    return proto.pubnub.LocationTrackingMessage.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.pubnub.LocationTrackingMessage} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.pubnub.LocationTrackingMessage.toObject = function(
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        trackingId: jspb.Message.getFieldWithDefault(msg, 1, ""),
        trackingStatus: jspb.Message.getFieldWithDefault(msg, 2, 0),
        customStatus:
          (f = msg.getCustomStatus()) &&
          google_protobuf_struct_pb.Value.toObject(includeInstance, f),
        location:
          (f = msg.getLocation()) &&
          pubnub_types_pb.Location.toObject(includeInstance, f),
        metadata:
          (f = msg.getMetadata()) &&
          google_protobuf_struct_pb.Value.toObject(includeInstance, f)
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pubnub.LocationTrackingMessage}
 */
proto.pubnub.LocationTrackingMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pubnub.LocationTrackingMessage();
  return proto.pubnub.LocationTrackingMessage.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pubnub.LocationTrackingMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pubnub.LocationTrackingMessage}
 */
proto.pubnub.LocationTrackingMessage.deserializeBinaryFromReader = function(
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setTrackingId(value);
        break;
      case 2:
        var value = /** @type {!proto.pubnub.LocationTrackingMessage.TrackingStatus} */ (reader.readEnum());
        msg.setTrackingStatus(value);
        break;
      case 3:
        var value = new google_protobuf_struct_pb.Value();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Value.deserializeBinaryFromReader
        );
        msg.setCustomStatus(value);
        break;
      case 4:
        var value = new pubnub_types_pb.Location();
        reader.readMessage(
          value,
          pubnub_types_pb.Location.deserializeBinaryFromReader
        );
        msg.setLocation(value);
        break;
      case 5:
        var value = new google_protobuf_struct_pb.Value();
        reader.readMessage(
          value,
          google_protobuf_struct_pb.Value.deserializeBinaryFromReader
        );
        msg.setMetadata(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pubnub.LocationTrackingMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pubnub.LocationTrackingMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pubnub.LocationTrackingMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pubnub.LocationTrackingMessage.serializeBinaryToWriter = function(
  message,
  writer
) {
  var f = undefined;
  f = message.getTrackingId();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getTrackingStatus();
  if (f !== 0.0) {
    writer.writeEnum(2, f);
  }
  f = message.getCustomStatus();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
  f = message.getLocation();
  if (f != null) {
    writer.writeMessage(4, f, pubnub_types_pb.Location.serializeBinaryToWriter);
  }
  f = message.getMetadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_struct_pb.Value.serializeBinaryToWriter
    );
  }
};

/**
 * @enum {number}
 */
proto.pubnub.LocationTrackingMessage.TrackingStatus = {
  CUSTOM: 0,
  READY_FOR_PICKUP: 1,
  EN_ROUTE_TO_DELIVER: 2,
  DELIVERED: 3,
  UNABLE_TO_DELIVER: 4,
  RETURNING: 5,
  CLOSED: 6,
  EXCEPTION: 7
};

/**
 * optional string tracking_id = 1;
 * @return {string}
 */
proto.pubnub.LocationTrackingMessage.prototype.getTrackingId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.setTrackingId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional TrackingStatus tracking_status = 2;
 * @return {!proto.pubnub.LocationTrackingMessage.TrackingStatus}
 */
proto.pubnub.LocationTrackingMessage.prototype.getTrackingStatus = function() {
  return /** @type {!proto.pubnub.LocationTrackingMessage.TrackingStatus} */ (jspb.Message.getFieldWithDefault(
    this,
    2,
    0
  ));
};

/**
 * @param {!proto.pubnub.LocationTrackingMessage.TrackingStatus} value
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.setTrackingStatus = function(
  value
) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};

/**
 * optional google.protobuf.Value custom_status = 3;
 * @return {?proto.google.protobuf.Value}
 */
proto.pubnub.LocationTrackingMessage.prototype.getCustomStatus = function() {
  return /** @type{?proto.google.protobuf.Value} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_struct_pb.Value,
    3
  ));
};

/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.setCustomStatus = function(
  value
) {
  return jspb.Message.setWrapperField(this, 3, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.clearCustomStatus = function() {
  return this.setCustomStatus(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.LocationTrackingMessage.prototype.hasCustomStatus = function() {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional Location location = 4;
 * @return {?proto.pubnub.Location}
 */
proto.pubnub.LocationTrackingMessage.prototype.getLocation = function() {
  return /** @type{?proto.pubnub.Location} */ (jspb.Message.getWrapperField(
    this,
    pubnub_types_pb.Location,
    4
  ));
};

/**
 * @param {?proto.pubnub.Location|undefined} value
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.setLocation = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.clearLocation = function() {
  return this.setLocation(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.LocationTrackingMessage.prototype.hasLocation = function() {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * optional google.protobuf.Value metadata = 5;
 * @return {?proto.google.protobuf.Value}
 */
proto.pubnub.LocationTrackingMessage.prototype.getMetadata = function() {
  return /** @type{?proto.google.protobuf.Value} */ (jspb.Message.getWrapperField(
    this,
    google_protobuf_struct_pb.Value,
    5
  ));
};

/**
 * @param {?proto.google.protobuf.Value|undefined} value
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.setMetadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.pubnub.LocationTrackingMessage} returns this
 */
proto.pubnub.LocationTrackingMessage.prototype.clearMetadata = function() {
  return this.setMetadata(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pubnub.LocationTrackingMessage.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 5) != null;
};

goog.object.extend(exports, proto.pubnub);
